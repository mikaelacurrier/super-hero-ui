{"version":3,"sources":["components/heroes.js","components/errorPage.js","actions/heroes.js","utils/heros.js","components/hero.js","App.js","reportWebVitals.js","index.js"],"names":["Heroes","props","className","id","type","name","onChange","event","setSearchTerm","target","value","heroesDataAsProps","map","hero","to","ErrorPage","a","axios","get","data","fetchData","fetchApiData","withRouter","useParams","heroes","JSON","parse","localStorage","getItem","console","log","singleHero","filter","toString","firstappearance","useState","heroesData","setHeroesData","filteredHeroes","setFilteredHeroes","searchTerm","useEffect","setItem","stringify","pullData","toLowerCase","includes","filtered","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QA4BeA,EAxBA,SAAAC,GAMX,OACI,sBAAKC,UAAU,gBAAf,UACI,oBAAIC,GAAG,cAAP,6BACA,sEACA,uBAAOC,KAAK,OAAOC,KAAK,SAASC,SAAU,SAACC,GAAD,OAAWN,EAAMO,cAAcD,EAAME,OAAOC,UACtFT,EAAMU,kBAAkBC,KAAI,SAAAC,GACzB,OACI,mCACI,8BACI,cAAC,IAAD,CAASC,GAAE,kBAAaD,EAAKV,IAA7B,SAAoCU,EAAKR,kBCXtDU,EANG,WACd,OACI,qBAAKb,UAAU,eAAf,wC,wBCFR,wBAAe,8BAAAc,EAAA,sEACYC,IAAMC,IAAI,6BADtB,uBACHC,EADG,EACHA,KADG,kBAGJA,GAHI,2CCAR,SAAeC,IAAtB,+B,4CAAO,4BAAAJ,EAAA,sEACgBK,IADhB,cACGF,EADH,yBAGIA,GAHJ,4C,sBAMA,ICqCQG,eAxCF,WAkBT,IAAOnB,EAAMoB,cAANpB,GAEDqB,EAASC,KAAKC,MAAMC,aAAaC,QAAQ,WAC/CC,QAAQC,IAAIN,GAEZ,IAAMO,EAAaP,EAAOQ,QAAO,SAAAnB,GAC7B,OAAOA,EAAKV,GAAG8B,aAAe9B,KAMlC,OAHA0B,QAAQC,IAAIC,GAIR,gCACI,6BAAKA,EAAW,GAAG1B,OACnB,8BACK0B,EAAW,GAAGG,wBC/BhB,aACb,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4CF,mBAAS,IAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBhC,EAAnB,KAqBA,OAnBAiC,qBAAU,WAAM,4CACd,4BAAAzB,EAAA,sEACqBI,IADrB,OACQD,EADR,OAGEkB,EAAclB,GACdoB,EAAkBpB,GAClBQ,aAAae,QAAQ,SAAUjB,KAAKkB,UAAUxB,IALhD,4CADc,uBAAC,WAAD,wBASdyB,KACC,IAEHH,qBAAU,WAER,IAAMjB,EFnBc,SAACY,EAAYI,GAAb,OAA4BJ,EAAWJ,QAAO,SAAAnB,GAClE,OAAOA,EAAKR,KAAKwC,cAAcC,SAASN,EAAWK,kBEkBpCE,CAASX,EAAYI,GACpCD,EAAkBf,KAEjB,CAACgB,IAGF,mCACA,cAAC,IAAD,UACE,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CACEtC,kBAAmB2B,EACnB9B,cAAeA,MAInB,cAAC,IAAD,CAAOyC,KAAK,cAAZ,SACE,cAAC,EAAD,MAGF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cCrCKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7fbbf7b8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\nconst Heroes = props => {\n    // useState take 1 parameter -- default value\n    // returns array w/ 2 values\n    // 1) state\n    // 2) a function that updates state\n    // console.log(props.heroesDataAsProps)\n    return (\n        <div className='heroesWrapper'>\n            <h2 id=\"heroesTitle\">Meet the Heroes</h2>\n            <div>A searchable list of all the Heroes</div>\n            <input type=\"text\" name=\"search\" onChange={(event) => props.setSearchTerm(event.target.value)}/>\n            {props.heroesDataAsProps.map(hero => {\n                return (\n                    <>\n                        <div>\n                            <NavLink to={`/heroes/${hero.id}`}>{hero.name}</NavLink>\n                        </div>\n                    </>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Heroes;","import React from 'react'\n\nconst ErrorPage = () => {\n    return (\n        <div className=\"errorPageDiv\">Oops! That doesn't exist!</div>\n    )\n}\n\nexport default ErrorPage;","import axios from 'axios';\n\nexport default async () => {\n    const { data } = await axios.get('http://localhost:1337/api')\n\n    return data\n}","import fetchApiData from '../actions/heroes';\n\nexport async function fetchData() {\n    const data = await fetchApiData()\n\n    return data\n}\n\nexport const filtered = (heroesData, searchTerm) => heroesData.filter(hero => {\n    return hero.name.toLowerCase().includes(searchTerm.toLowerCase())\n})","import React, {useState, useEffect} from 'react';\nimport {useParams, withRouter} from 'react-router-dom'\nimport {fetchData, filtered} from '../utils/heros'\n\n\nconst Hero = () => {\n    // const [heroes, setHeroesData] = useState([])\n\n    // useEffect(() => {\n    //     console.log('here')\n    //     async function pullData() {\n    //       const data = await fetchData()\n    //       console.log(data)\n    \n    //       setHeroesData(data)\n    //     }\n    \n    //     pullData()\n    //   }, [])\n\n    //   console.log(props)\n    \n\n    const {id} = useParams()\n\n    const heroes = JSON.parse(localStorage.getItem('heroes'))\n    console.log(heroes)\n\n    const singleHero = heroes.filter(hero => {\n        return hero.id.toString() === id\n    })\n\n    console.log(singleHero)\n\n\n    return (\n        <div>\n            <h3>{singleHero[0].name}</h3>\n            <div>\n                {singleHero[0].firstappearance}\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Hero)","import react, {useState, useEffect} from 'react';\nimport './App.css';\nimport Heroes from './components/heroes';\nimport ErrorPage from './components/errorPage';\nimport Hero from './components/hero';\nimport {fetchData, filtered} from './utils/heros'\nimport  { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nexport default () => {\n  const [heroesData, setHeroesData] = useState([])\n  const [filteredHeroes, setFilteredHeroes] = useState([])\n  const [searchTerm, setSearchTerm] = useState('')\n\n  useEffect(() => {\n    async function pullData() {\n      const data = await fetchData()\n\n      setHeroesData(data)\n      setFilteredHeroes(data)\n      localStorage.setItem('heroes', JSON.stringify(data))\n    }\n\n    pullData()\n  }, [])\n\n  useEffect(() => {\n\n    const heroes = filtered(heroesData, searchTerm)\n    setFilteredHeroes(heroes)\n\n  }, [searchTerm])\n\n  return (\n    <>\n    <BrowserRouter>\n      <Switch>\n\n        <Route exact path='/'>\n          <Heroes \n            heroesDataAsProps={filteredHeroes}\n            setSearchTerm={setSearchTerm}\n          />\n        </Route>\n\n        <Route path='/heroes/:id'>\n          <Hero />\n        </Route>\n\n        <Route path=\"*\">\n          <ErrorPage />\n        </Route>\n         \n        </Switch>\n      </BrowserRouter>\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}